#
# Landscape omnikeeper REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER NamePrefix
No description available.
.PARAMETER LayerID
No description available.
.PARAMETER Fragments
No description available.
.OUTPUTS

BulkCIAttributeLayerScopeDTO<PSCustomObject>
#>

function Initialize-OKBulkCIAttributeLayerScopeDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NamePrefix},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Int64]
        ${LayerID},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Fragments}
    )

    Process {
        'Creating PSCustomObject: okclient => OKBulkCIAttributeLayerScopeDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($NamePrefix -eq $null) {
            throw "invalid value for 'NamePrefix', 'NamePrefix' cannot be null."
        }

        if ($LayerID -eq $null) {
            throw "invalid value for 'LayerID', 'LayerID' cannot be null."
        }

        if ($Fragments -eq $null) {
            throw "invalid value for 'Fragments', 'Fragments' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "namePrefix" = ${NamePrefix}
            "layerID" = ${LayerID}
            "fragments" = ${Fragments}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkCIAttributeLayerScopeDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkCIAttributeLayerScopeDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkCIAttributeLayerScopeDTO<PSCustomObject>
#>
function ConvertFrom-OKJsonToBulkCIAttributeLayerScopeDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: okclient => OKBulkCIAttributeLayerScopeDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OKBulkCIAttributeLayerScopeDTO
        $AllProperties = ("namePrefix", "layerID", "fragments")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'namePrefix' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "namePrefix"))) {
            throw "Error! JSON cannot be serialized due to the required property 'namePrefix' missing."
        } else {
            $NamePrefix = $JsonParameters.PSobject.Properties["namePrefix"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "layerID"))) {
            throw "Error! JSON cannot be serialized due to the required property 'layerID' missing."
        } else {
            $LayerID = $JsonParameters.PSobject.Properties["layerID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fragments"))) {
            throw "Error! JSON cannot be serialized due to the required property 'fragments' missing."
        } else {
            $Fragments = $JsonParameters.PSobject.Properties["fragments"].value
        }

        $PSO = [PSCustomObject]@{
            "namePrefix" = ${NamePrefix}
            "layerID" = ${LayerID}
            "fragments" = ${Fragments}
        }

        return $PSO
    }

}

