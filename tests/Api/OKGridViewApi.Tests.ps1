#
# Landscape omnikeeper REST API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'okclient' -name 'OKOKGridViewApi' {
    Context 'Add-OKContext' {
        It 'Test Add-OKContext' {
            #$TestResult = Add-OKContext -Version "TEST_VALUE" -AddContextRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Rename-OKData' {
        It 'Test Rename-OKData' {
            #$TestResult = Rename-OKData -Context "TEST_VALUE" -Version "TEST_VALUE" -ChangeDataRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-OKDeleteContext' {
        It 'Test Invoke-OKDeleteContext' {
            #$TestResult = Invoke-OKDeleteContext -Name "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Edit-OKContext' {
        It 'Test Edit-OKContext' {
            #$TestResult = Edit-OKContext -Name "TEST_VALUE" -Version "TEST_VALUE" -EditContextRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OKContext' {
        It 'Test Get-OKContext' {
            #$TestResult = Get-OKContext -Name "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OKContexts' {
        It 'Test Get-OKContexts' {
            #$TestResult = Get-OKContexts -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OKData' {
        It 'Test Get-OKData' {
            #$TestResult = Get-OKData -Context "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OKSchema' {
        It 'Test Get-OKSchema' {
            #$TestResult = Get-OKSchema -Context "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
